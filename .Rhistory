data = read.table(file = "./activity.csv",header=T, quote="\"", sep=",")
data$date <- as.Date(data$date)
row.has.na <- apply(final, 1, function(x){any(is.na(x))})
row.has.na <- apply(data, 1, function(x){any(is.na(x))})
sum(row.has.na)
dataClean <- data[!row.has.na,]
library(ggplot2)
print(ggp)
source('C:/Users/AKINO/Desktop/Rprogramming/plot5.R')
ddply(dataClean, .(Date), summarize, daily_mean_Temp = mean(steps))
library(plyr)
ddply(dataClean, .(Date), summarize, daily_mean_Temp = mean(steps))
ddply(dataClean, .(date), summarize, daily_mean_Temp = mean(steps))
means <- ddply(dataClean, .(date), summarize, daily_mean_Temp = mean(steps))
means <- ddply(dataClean, .(date), summarize, daily_mean_Steps = mean(steps))
barplot(means$date, names.arg=means$daily_mean_Steps, main='Baltimore Emission of PM25',xlab='Year', ylab='Baltimore PM25 Emission (in tons)')
means$date
means$daily_mean_Steps
means <- ddply(dataClean, .(date), summarize, daily_mean_Steps = mean(steps))
ggplot(means, aes(x=date, y=daily_mean_Steps)) + geom_bar(stat="identity") +
labs(x="day", y="mean number of steps")
stepsByDay <- tapply(dataClean$steps, dataClean$date, sum)
ggplot(stepsByDay) + geom_bar(stat="identity") + labs(x="day", y="mean number of steps")
daySteps <- tapply(dataClean$steps, dataClean$date, sum)
hist(daySteps, main="Number of steps per day", xlab="Total number of steps")
mean(daySteps)
median(daySteps)
avg_steps <- aggregate(steps ~ interval, daySteps, mean)
daySteps <- tapply(dataClean$steps, dataClean$date, sum)
avg_steps <- aggregate(steps ~ interval, daySteps, mean)
avg_steps <- aggregate(steps ~ interval, dataClean, mean)
plot(avg_steps$interval, avg_steps$steps, type='l',
main="Average number of steps over all days", xlab="Interval",
ylab="Average number of steps")
ggplot(avg_steps, aes(x=interval, y=steps)) + geom_bar(stat="identity") +
labs(x="interval", y="average number of steps")
ggplot(avg_steps, aes(x=interval, y=steps)) +labs(x="interval", y="average number of steps")
ggplot(avg_steps, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = Emissions)) + geom_point(aes(size = 1, col = steps)) +   ylab("average number of steps"") + xlab("interval") +  ggtitle("Average number of steps by Interval")
ggplot(avg_steps, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = Emissions)) + geom_point(aes(size = 1, col = steps)) +   ylab("average number of steps) + xlab("interval") +  ggtitle("Average number of steps by Interval")
ggplot(avg_steps, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = Emissions)) + geom_point(aes(size = 1, col = steps))
ggplot(avg_steps, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = steps)) + geom_point(aes(size = 1, col = steps))
ggplot(avg_steps, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = steps)) + geom_point(aes(size = 0.5, col = steps))
ggplot(avg_steps, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = steps)) + geom_point(aes(size = 0.1, col = steps))
ggplot(avg_steps, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = steps))
ggplot(avg_steps, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = steps)) + ylab("average number of steps) + xlab("interval") +  ggtitle("Average number of steps by Interval")
ggplot(avg_steps, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = steps)) + ylab("average number of steps)
asdf
)
))))
:
asdfasdf
asd
fasdf
asdfasd
asdasdfasdf
""
"""""
ggplot(avg_steps, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = steps)) + ylab("average number of steps)
""
"""""
ggplot(avg_steps, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = steps)) + ylab("average number of steps")
ggplot(avg_steps, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = steps)) + ylab("average number of steps")+ xlab("interval") +  ggtitle("Average number of steps by Interval")
max(avg_steps)
max(avg_steps$steps)
max_interval <- which.max(avg_steps)
names(max_interval)
max_interval <- which.max(avg_steps$steps)
names(max_interval)
max_interval
names(max_interval)
max_interval <- which.min(avg_steps$steps)
max_interval
print(avg_steps[max_interval,])
max_interval <- which.max(avg_steps$steps)
print(avg_steps[max_interval,])
match(NA,data$steps)
match(NA,data$date)
match(NA,data$interval)
for (i in 1:nrow(data)) {
if(is.na(data$steps[i])) {
val <- avg_steps$steps[which(avg_steps$interval == data$interval[i])]
data$steps[i] <- val
}
}
dayStepsFull <- tapply(data$steps, data$date, sum)
hist(dayStepsFull, main="Number of steps per day", xlab="Total number of steps")
mean(daySteps)
median(daySteps)
mean(dayStepsFull)
median(dayStepsFull)
weekdays
weekdays (dayStepsFull$date[1,])
weekdays (dayStepsFull$date[,1])
weekdays (dayStepsFull$date)
data$day <- weekdays(data$date)
data$day <- weekdays(data$date)
data$day[data$day  %in% c('Saturday','Sunday') ] <- "1"
data$day[data$day != "weekend"] <- "0"
data$day <- as.factor(data$day)
avg_stepsFull <- aggregate(steps ~ interval, data, mean)
ggplot(avg_stepsFull, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = steps)) + ylab("average number of steps")+ xlab("interval") +  ggtitle("Average number of steps by Interval")
ggplot(avg_stepsFull, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = steps)) + ylab("average number of steps")+ xlab("interval") +  ggtitle("Average number of steps by Interval") +facet_grid(scales="free", space="free", .~day)
avg_stepsFull <- aggregate(steps ~ interval + day, data, mean)
ggplot(avg_stepsFull, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = steps)) + ylab("average number of steps")+ xlab("interval") +  ggtitle("Average number of steps by Interval") +facet_grid(scales="free", space="free", .~day)
avg_stepsFull <- aggregate(steps ~ interval + day, data, mean)
avg_stepsFull$dat
avg_stepsFull$day
library(plyr)
library(ggplot2)
data = read.table(file = "./activity.csv",header=T, quote="\"", sep=",")
data$date <- as.Date(data$date)
data$day <- weekdays(data$date)
data$day
data$day[5000]
data$day[8000]
data$day[6000]
data$day[5600]
data$day[data$day  %in% c('domingo','sábado') ] <- "1"
data$day[data$day != "weekend"] <- "0"
data$day <- as.factor(data$day)
avg_stepsFull <- aggregate(steps ~ interval + day, data, mean)
ggplot(avg_stepsFull, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = steps)) + ylab("average number of steps")+ xlab("interval") +  ggtitle("Average number of steps by Interval") +facet_grid(scales="free", space="free", .~day)
data$day
data$day[5000]
data$day[560]
data$day[5600]
data$day[700]
data$day[7000]
data$day[6500]
data$day[data$day  %in% c('domingo','sábado') ] <- "weekend"
data$day[data$day != "weekend"] <- "weekday"
data = read.table(file = "./activity.csv",header=T, quote="\"", sep=",")
data$date <- as.Date(data$date)
data$day <- weekdays(data$date)
data$day[data$day  %in% c('domingo','sábado') ] <- "weekend"
data$day[5600]
data$day[500]
data$day[data$day != "weekend"] <- "weekday"
data$day <- as.factor(data$day)
avg_stepsFull <- aggregate(steps ~ interval + day, data, mean)
ggplot(avg_stepsFull, aes(x = interval, y = steps)) +  geom_line(aes(group = 1, col = steps)) + ylab("average number of steps")+ xlab("interval") +  ggtitle("Average number of steps by Interval") +facet_grid(scales="free", space="free", .~day)
